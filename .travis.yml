# specify the language being used
language: rust

# this caches the cargo dependency so that it does not recompile for every run
# TODO: ensure the above claim is correct
cache: cargo

# runs all jobs given the below rust chains
rust:
        - stable
        - nightly
        - beta

# installs the appropriate dependencies
install:
        - cargo install cross || true
        - source ~/.cargo/env || true

# sets environment variables
env:
        - TARGET=armv7-unknown-linux-gnueabihf

# this actually runs the scripts that need to be run
# uses the 'cross' crate to cross-compile to the Raspberry Pi architecture
# TODO: ensure that the above claim is correct
script:
        - cross build --all-features --target $TARGET
        - cross build --all-features --target $TARGET --release

# tag specifying how jobs should be run
jobs:
        # ensures that job failures on the beta and nightly chains don't cause an overall build failure
        allow_failures:
                - rust: beta
                - rust: nightly

        # TODO: figure out what 'fast_finish' does exactly
        fast_finish: true
